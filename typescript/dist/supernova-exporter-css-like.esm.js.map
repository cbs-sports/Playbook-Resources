{"version":3,"file":"supernova-exporter-css-like.esm.js","sources":["../src/index.ts"],"sourcesContent":["import shortenCssHex from 'shorten-css-hex';\nimport hexToRgba from 'hex-to-rgba';\n\nfunction shortenHex(hexValue) {\n  const shortenedHex = shortenCssHex('#' + hexValue);\n  return shortenedHex;\n}\n\nPulsar.registerFunction(\"shortenHex\", shortenHex);\n\nfunction toRgba(hexValue){\n  const convertedHex = hexToRgba('#' + hexValue);\n  return convertedHex;\n}\n\nPulsar.registerFunction(\"toRgba\", toRgba);\n\n/**\n * Convert group name, token name and possible prefix into camelCased string, joining everything together\n */\n Pulsar.registerFunction(\n  \"readableVariableName\",\n  function (token, tokenGroup) {\n    const segments = [...tokenGroup.path];\n    segments.push(tokenGroup.name);\n    segments.push(token.name);\n\n    let tokenName = segments.join(\"-\");\n\n    tokenName = tokenName.replace('+', '');\n    tokenName = tokenName.replace(/[^a-zA-Z0-9_-]/g, '-');\n    tokenName = tokenName.replace('Dimension-', '');\n\n    return tokenName;\n  }\n);\n\nfunction findAliases(token, allTokens){\n  let aliases = allTokens.filter(t => t.value.referencedToken && t.value.referencedToken.id === token.id)\n  for (const t of aliases) {\n    aliases = aliases.concat(findAliases(t, allTokens))\n  }\n  return aliases;\n}\n\nPulsar.registerFunction(\"findAliases\", findAliases)\n\nPulsar.registerFunction(\"gradientAngle\", function(from, to) {\n    var deltaY = (to.y - from.y);\n    var deltaX = (to.x - from.x);\n    var radians = Math.atan2(deltaY, deltaX); \n    var result = radians * 180 / Math.PI; \n    result = result + 90; \n    return  ((result < 0) ? (360 + result) : result) % 360;\n})\n\n/**\n * Behavior configuration of the exporter\n * Prefixes: Add prefix for each category of the tokens. For example, all colors can start with \"color, if needed\"\n */\nPulsar.registerPayload(\"behavior\", {\n  colorTokenPrefix: \"color\",\n  borderTokenPrefix: \"border\",\n  gradientTokenPrefix: \"gradient\",\n  measureTokenPrefix: \"measure\",\n  shadowTokenPrefix: \"shadow\",\n  typographyTokenPrefix: \"typography\",\n  textTokenPrefix: \"text\"\n});\n\n\n/** Describe complex shadow token */\nPulsar.registerFunction(\"shadowDescription\", function (shadowToken) {\n  \n  let connectedShadow = \"transparent\"\n  if (shadowToken.shadowLayers) {\n    connectedShadow = shadowToken.shadowLayers.reverse().map((shadow) => {\n        return shadowTokenValue(shadow)\n    }).join(\", \")\n  } else {\n    return shadowTokenValue(shadowToken)\n  }\n\n  return connectedShadow ?? \"\"\n})\n\n/** Convert complex shadow value to CSS representation */\nfunction shadowTokenValue(shadowToken) {\n  var blurRadius = getValueWithCorrectUnit(nonNegativeValue(shadowToken.value.radius.measure));\n  var offsetX = getValueWithCorrectUnit(shadowToken.value.x.measure);\n  var offsetY = getValueWithCorrectUnit(shadowToken.value.y.measure);\n  var spreadRadius = getValueWithCorrectUnit(shadowToken.value.spread.measure);\n\n  return `${shadowToken.value.type === \"Inner\" ? \"inset \" : \"\"}${offsetX} ${offsetY} ${blurRadius} ${spreadRadius} ${getFormattedRGB(shadowToken.value.color)}`\n}\n\n\nfunction getValueWithCorrectUnit(value) {\n  if (value === 0) {\n    return `${value}`\n  } else {\n    // todo: add support for other units (px, rem, em, etc.)\n    return `${value}px`\n  }\n}\n\nfunction nonNegativeValue(num) {\n  if (num <= 0) {\n    return 0\n  } else {\n    return num\n  }\n}\n\n/** Convert type to CSS unit */\nfunction measureTypeIntoReadableUnit(type) {\n  switch (type) {\n    case \"Points\":\n      return \"pt\"\n    case \"Pixels\":\n      return \"px\"\n    case \"Percent\":\n      return \"%\"\n    case \"Ems\":\n      return \"em\"\n  }\n}\n\nfunction getFormattedRGB(colorValue) {\n  if (colorValue.a === 0) {\n    return `rgb(${colorValue.r},${colorValue.g},${colorValue.b})`\n  } else {\n    const opacity = Math.round((colorValue.a/255) * 100) / 100;\n    return `rgba(${colorValue.r},${colorValue.g},${colorValue.b},${opacity})`\n  } \n}\n\nfunction compare(a, b) {\n  if ( a.name < b.name ){\n    return -1;\n  }\n  if ( a.name > b.name ){\n    return 1;\n  }\n  return 0;\n}\n\nfunction sortTokens(tokens) {\n  return tokens.sort(compare);\n}\n\nPulsar.registerFunction(\"sortTokens\", sortTokens);"],"names":["shortenHex","hexValue","shortenedHex","shortenCssHex","Pulsar","registerFunction","toRgba","convertedHex","hexToRgba","token","tokenGroup","segments","path","push","name","tokenName","join","replace","findAliases","allTokens","aliases","filter","t","value","referencedToken","id","concat","from","to","deltaY","y","deltaX","x","radians","Math","atan2","result","PI","registerPayload","colorTokenPrefix","borderTokenPrefix","gradientTokenPrefix","measureTokenPrefix","shadowTokenPrefix","typographyTokenPrefix","textTokenPrefix","shadowToken","connectedShadow","shadowLayers","reverse","map","shadow","shadowTokenValue","blurRadius","getValueWithCorrectUnit","nonNegativeValue","radius","measure","offsetX","offsetY","spreadRadius","spread","type","getFormattedRGB","color","num","colorValue","a","r","g","b","opacity","round","compare","sortTokens","tokens","sort"],"mappings":"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"}